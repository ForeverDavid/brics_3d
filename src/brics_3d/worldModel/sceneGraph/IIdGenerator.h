/******************************************************************************
* BRICS_3D - 3D Perception and Modeling Library
* Copyright (c) 2011, GPS GmbH
*
* Author: Sebastian Blumenthal
*
*
* This software is published under a dual-license: GNU Lesser General Public
* License LGPL 2.1 and Modified BSD license. The dual-license implies that
* users of this code may choose which terms they prefer.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
* GNU Lesser General Public License LGPL and the BSD license for
* more details.
*
******************************************************************************/

#ifndef RSG_IIDGENERATOR_H
#define RSG_IIDGENERATOR_H

#include "Id.h"

namespace brics_3d {

namespace rsg {

/**
 * @brief Abstract interface for unique ID generation.
 */
class IIdGenerator { // TODO: Should be singleton?
  public:

	IIdGenerator(){};
	virtual ~IIdGenerator(){};

	/**
	 * @brief Get the next autogenerated valid ID from the pool.
	 * @return ID
	 */
    virtual Id getNextValidId() = 0;

    /**
     * @brief Get the (local) root ID
     * @return (local) root ID
     */
    virtual Id getRootId() = 0;

    /**
     * @brief Notify the ID generator to remove a certain ID from the ID pool.
     * @param id The ID to be removed.
     * @return True if ID was successfully removed. False if ID is invalid. E.g. it exists already.
     */
    virtual bool removeIdFromPool(Id id) = 0;

};

} // namespace brics_3d::rsg

} // namespace brics_3d
#endif

/* EOF */

