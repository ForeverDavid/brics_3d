/*! 
@mainpage BRICS_3D Documentation pages 

BRICS_3D is the BRICS library for 3D perception and modeling. It implements the processing stages to create a 3D model (e.g. triangle representation) out of data from laser range finders, ToF cameras or depth images from stereo cameras. 
This library is biased towards 3D perception and modeling for mobile manipulation applications.
 
@section toc Table of Contents

- @ref introduction
- @ref installation
- @ref quickstart
- @ref examples
 - @ref demo_example
 - @ref pointcloud_viewer
 - @ref world_model_example
- @ref tutorials
  - @ref point_tutorial
  - @ref point_cloud_tutorial
  - @ref transformation_tutorial
  - @ref triangle_mesh_tutorial
  - @ref visualizer_tutorial
- @ref Algorithms
 - @ref depth_perception
 - @ref filtering
 - @ref registration 
 - @ref nearestNeighbor
 - @ref mesh_generation
 - @ref visualization
- @ref license 

@section license Licensing
This software is published under a dual-license: GNU Lesser General Public
License LGPL 2.1 and Modified BSD license. The dual-license implies that
users of this code may choose which terms they prefer. Please see the files
called <a href="../../LGPL-2.1">LGPL-2.1</a> and <a href="../../BSDlicense">BSDlicense</a>. 

 
 

 
*/
 
/*!  
 

@namespace BRICS_3D 
	@brief The BRICS 3D perception and modeling library.
 
 
 
@defgroup depth_perception Depth perception
	@brief This module has simple capabilities for depth perception.
		
	An introduction can be found in the @ref depth_perception_def section. 

 
 
@defgroup filtering Filtering
	@brief This module contains algorithms for filtering of point clouds. 
	
    An introduction can be found in the @ref filtering_def section. 
 
	For example the Octree based size reduction filter can be found here.
 
  

@defgroup registration Registration
	@brief This module contains algorithms for registration of point clouds.
 
    An introduction can be found in the @ref registration_def section. 
    This modules module comprises in particular the Iterative Closest Point algorithm (ICP) and atomic sub components.
 
 
  
@defgroup mesh_generation Mesh generation
 	@brief This module offers algorithms for mesh generation.

    An introduction can be found in the @ref mesh_generation_def section.   
 	The module contains Delaunay triangulation and related methods.
  
  
 
@defgroup visualization Visualization
 	@brief This module has tools for visualization of 3D representations
  
    An introduction can be found in the @ref visualization_def section.
  
  
@defgroup nearestNeighbor NearestNeighbor
	@brief This module contains algorithms for nearest neighbor search.

    An introduction can be found in the @ref classification_def section.
    
    
    
 */
  