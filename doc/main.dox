/*! 
@mainpage BRICS_3D Documentation pages 

	BRICS_3D is the BRICS library for 3D perception and modeling. It offers perception
	algorithms to create a processing chain for object recognition or environment reconstruction 
	(e.g. triangle representation) via data from 3D sensors. 
	
	Beside the algorithms for perception the BRICS_3D library implements a novel scene graph based
	world modeling approach to maintain the processed 3D data over a longer period of time.	 
	This library is biased towards 3D perception and modeling for mobile manipulation applications.
 
@section toc Table of Contents

- @ref introduction
- @ref worldmodel
- @ref installation
- @ref quickstart
- @ref examples
 - @ref demo_example
 - @ref pointcloud_viewer
 - @ref world_model_example
- @ref tutorials
  - @ref point_tutorial
  - @ref point_cloud_tutorial
  - @ref transformation_tutorial
  - @ref triangle_mesh_tutorial
  - @ref visualizer_tutorial
- @ref Algorithms for perception
 - @ref depth_perception
 - @ref filtering
 - @ref registration
 - @ref segmentation 
 - @ref nearestNeighbor
 - @ref mesh_generation
 - @ref visualization
- @ref sceneGraph world model implementation
- @ref Integration into existing frameworks
 - @ref brics_3d_bride 
- @ref license
- @ref references 

@section license Licensing
This software is published under a dual-license: GNU Lesser General Public
License LGPL 2.1 and Modified BSD license. The dual-license implies that
users of this code may choose which terms they prefer. Please see the files
called <a href="../../LGPL-2.1">LGPL-2.1</a> and <a href="../../BSDlicense">BSDlicense</a>. 

@section references References 

If you want to cite the BRICS_3D library you can use the following reference. Among others it contains an overwiew of the 3D Perception an Modeling domain and the basic design principles behind this library. 

@code
@INPROCEEDINGS{blumenthal11towards,
  author = {Blumenthal, S. and Prassler, E. and Fischer, J. and Nowak, W.},
  title = {Towards identification of best practice algorithms in 3D perception and modeling},
  booktitle = {IEEE International Conference on Robotics and Automation (ICRA)},
  year = {2011},
  pages = {3554--3561},
  organization = {IEEE},
  doi = {10.1109/ICRA.2011.5980106}
}
@endcode

*/
 
/*!  
 

@namespace brics_3d 
	@brief The BRICS 3D perception and modeling library.
 
 
 
@defgroup depth_perception Depth perception
	@brief This module has simple capabilities for depth perception.
		
	An introduction can be found in the @ref depth_perception_def section. 

 
 
@defgroup filtering Filtering
	@brief This module contains algorithms for filtering of point clouds. 
	
    An introduction can be found in the @ref filtering_def section. 
 
	For example the Octree based size reduction filter can be found here.
 

@defgroup featureExtraction Feature Extraction
	@brief This module contains algorithms for feature extraction from point clouds. 
	
	An introduction can be found in the @ref feature_extraction_def section.
 

@defgroup registration Registration
	@brief This module contains algorithms for registration of point clouds.
 
    An introduction can be found in the @ref registration_def section. 
    This modules module comprises in particular the Iterative Closest Point algorithm (ICP) and atomic sub components.
 
@defgroup segmentation Segmentation
	@brief This module contains algorithms for segmenation algorithms for point clouds.
 
    An introduction can be found in the @ref segmentation_def section. 

  
@defgroup mesh_generation Mesh generation
 	@brief This module offers algorithms for mesh generation.

    An introduction can be found in the @ref mesh_generation_def section.   
 	The module contains Delaunay triangulation and related methods.
  
  
 
@defgroup visualization Visualization
 	@brief This module has tools for visualization of 3D representations
  
    An introduction can be found in the @ref visualization_def section.
  
  
@defgroup nearestNeighbor NearestNeighbor
	@brief This module contains algorithms for nearest neighbor search.

    An introduction can be found in the @ref classification_def section.
    

@defgroup sceneGraph Scenegraph
	@brief This module contains the implementation of the scenegraph based world model. 

    A detailed descussion can be found in @ref worldmodel.    
    
 */
  